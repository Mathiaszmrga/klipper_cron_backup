===== Config file =====
[adxl345]
cs_pin = can0:PB12
spi_software_sclk_pin = can0:PB10
spi_software_mosi_pin = can0:PB11
spi_software_miso_pin = can0:PB2
axes_map = x,y,z

[resonance_tester]
accel_chip = adxl345
probe_points = 
	60,60,20

[neopixel hat]
pin = PA8
chain_count = 18
color_order = GRB

[gcode_macro HAT_ON]
gcode = 
	SET_LED LED=hat GREEN=1 BLUE=1 RED=1

[gcode_macro HAT_OFF]
gcode = 
	SET_LED LED=hat GREEN=0 BLUE=0 RED=0

[neopixel underglow]
pin = PD5
chain_count = 24
color_order = GRB

[gcode_macro UNDERGLOW_ON]
gcode = 
	SET_LED LED=underglow GREEN=1 BLUE=1 RED=1

[gcode_macro UNDERGLOW_OFF]
gcode = 
	SET_LED LED=underglow GREEN=0 BLUE=0 RED=0

[gcode_macro NEOPIXEL_DISPLAY]
gcode = 
	{% set led = params.LED %}
	{% set type = params.TYPE %}
	{% set mode = params.MODE %}
	{% set my_neopixel = printer.configfile.config['neopixel ' ~ led] %}
	
	{% if mode == 'progress' %}
	{% for i in range(my_neopixel.chain_count|int) %}
	SET_LED_TEMPLATE LED={led} INDEX={i+1} TEMPLATE={'led_' ~ type ~ '_' ~ mode} param_led_num={i+1} param_led_total={my_neopixel.chain_count|int}
	{% endfor %}
	{% endif %}
	{% if mode == 'glow' %}
	SET_LED_TEMPLATE LED={led} TEMPLATE={'led_' ~ type ~ '_' ~ mode}
	{% endif %}

[display_template led_extruder_temp_glow]
text = 
	{% if printer.extruder.target > 0.0 %}
	{%  set temp = printer.extruder.target %}
	{% else %}
	{% set temp = printer.configfile.config.extruder.max_temp %}
	{% endif %}
	{% set ratio = printer.extruder.temperature / temp|float %}
	{ratio}, 0.0, {1-ratio}, 0.0

[display_template led_extruder_temp_progress]
param_led_num = 0
param_led_total = 1
text = 
	{% if printer.extruder.target > 0.0 %}
	{%  set temp = printer.extruder.target %}
	{% else %}
	{% set temp = printer.configfile.config.extruder.max_temp %}
	{% endif %}
	{% set ratio = printer.extruder.temperature / temp|float %}
	{% set led_ratio = param_led_num|float / param_led_total %}
	{% if ratio > led_ratio %}
	{led_ratio}, 0.0, 0.0, 0.0
	{% else %}
	0.0, 0.0, 0.0, 0.0
	{% endif %}

[display_template led_bed_temp_glow]
text = 
	{% if printer.heater_bed.target > 0.0 %}
	{%  set temp = printer.heater_bed.target %}
	{% else %}
	{% set temp = printer.configfile.config.heater_bed.max_temp %}
	{% endif %}
	{% set ratio = printer.heater_bed.temperature / temp|float %}
	{ratio}, 0.0, {1-ratio}, 0.0

[display_template led_bed_temp_progress]
param_led_num = 0
param_led_total = 1
text = 
	{% if printer.heater_bed.target > 0.0 %}
	{%  set temp = printer.heater_bed.target %}
	{% else %}
	{% set temp = printer.configfile.config.heater_bed.max_temp %}
	{% endif %}
	{% set ratio = printer.heater_bed.temperature / temp|float %}
	{% set led_ratio = param_led_num|float / param_led_total %}
	{% if ratio > led_ratio %}
	{led_ratio}, 0.0, 0.0, 0.0
	{% else %}
	0.0, 0.0, 0.0, 0.0
	{% endif %}

[display_template led_print_percent_glow]
text = 
	{% set ratio = printer.virtual_sdcard.progress %}
	0.0, {ratio}, 0.0, 0.0

[display_template led_print_percent_progress]
param_led_num = 0
param_led_total = 1
text = 
	{% set ratio = printer.virtual_sdcard.progress %}
	{% set led_ratio   = param_led_num|float / param_led_total %}
	{% if ratio > led_ratio %}
	0.0, {led_ratio}, 0.0, 0.0
	{% else %}
	0.0, 0.0, 0.0, 0.0
	{% endif %}

[display_template led_printer_speed_glow]
text = 
	{% set ratio  = printer.motion_report.live_velocity|float /  printer.configfile.config.printer.max_velocity|float %}
	0.0, {ratio}, 0.0, 0.0

[display_template led_printer_speed_progress]
param_led_num = 0
param_led_total = 1
text = 
	{% set ratio  = printer.motion_report.live_velocity|float /  printer.configfile.config.printer.max_velocity|float %}
	{% set led_ratio    = param_led_num|float / param_led_total %}
	{% if ratio > led_ratio %}
	0.0, {led_ratio}, 0.0, 0.0
	{% else %}
	0.0, 0.0, 0.0, 0.0
	{% endif %}

[gcode_macro _PRINT_START]
gcode = 
	{% set bedtemp = params.BED|int %}
	{% set hotendtemp = params.HOTEND|int %}
	{% set filament_profile = params.FILID|string %}
	G21
	G90
	M83
	G28
	NEOPIXEL_DISPLAY LED=underglow TYPE=extruder_temp MODE=glow
	G1 Z20 F50
	M190 S{bedtemp}
	M109 S{hotendtemp}
	G28 Z
	RESPOND TYPE=command MSG="Print start"
	RUN_SHELL_COMMAND CMD=SPEAK PARAMS="print_starting"
	
	
	{% if filament_profile == 'PLA_LOUD' %}
	SET_FAN_SPEED FAN=boostFans SPEED=100
	RESPOND TYPE=command MSG="{filament_profile} - Boost fans 100%"
	{% elif filid == 'PLA_STANDARD' %}
	SET_FAN_SPEED FAN=boostFans SPEED=0
	SET_PRESSURE_ADVANCE ADVANCE=0.035
	RESPOND TYPE=command MSG="{filament_profile} - Boost fans 0%"
	{% elif filid == 'ABS' %}
	SET_FAN_SPEED FAN=boostFans SPEED=0
	RESPOND TYPE=command MSG="{filament_profile} - Boost fans 100%"
	{% endif %}
	
	NEOPIXEL_DISPLAY LED=underglow TYPE=print_percent MODE=progress

[gcode_macro _PRINT_END]
gcode = 
	M400
	G92 E0
	G1 E-4.0 F3600
	G91
	SET_FAN_SPEED FAN=boostFans SPEED=0
	RESPOND TYPE=command MSG="Print end"
	RUN_SHELL_COMMAND CMD=SPEAK PARAMS="print_done"
	NEOPIXEL_DISPLAY LED=underglow TYPE=print_percent MODE=glow
	
	
	{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
	{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
	{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
	
	
	{% if printer.toolhead.position.x < (max_x - 20) %}
	{% set x_safe = 20.0 %}
	{% else %}
	{% set x_safe = -20.0 %}
	{% endif %}
	
	{% if printer.toolhead.position.y < (max_y - 20) %}
	{% set y_safe = 20.0 %}
	{% else %}
	{% set y_safe = -20.0 %}
	{% endif %}
	
	{% if printer.toolhead.position.z < (max_z - 20) %}
	{% set z_safe = 20 %}
	{% else %}
	{% set z_safe = max_z - printer.toolhead.position.z %}
	{% endif %}
	
	G0 Z{z_safe} F3600
	G0 X{x_safe} Y{y_safe} F20000
	TURN_OFF_HEATERS
	M107
	G90
	G0 X60 Y{max_y} F3600
	DISABLE_STEPPERS
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PAUSE]
rename_existing = PAUSE_BASE
gcode = 
	PAUSE_BASE
	_TOOLHEAD_PARK_PAUSE_CANCEL
	RESPOND TYPE=command MSG="Print pause"
	RUN_SHELL_COMMAND CMD=SPEAK PARAMS="print_paused"

[gcode_macro RESUME]
rename_existing = RESUME_BASE
gcode = 
	
	{% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
	
	{% if 'VELOCITY' in params|upper %}
	{% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
	{%else %}
	{% set get_params = "" %}
	{% endif %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	M83
	G1 E{extrude} F2100
	{% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESUME_BASE {get_params}
	RESPOND TYPE=command MSG="Print resume"
	RUN_SHELL_COMMAND CMD=SPEAK PARAMS="print_resuming"

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
variable_park = True
gcode = 
	SET_FAN_SPEED FAN=boostFans SPEED=0
	
	{% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
	_TOOLHEAD_PARK_PAUSE_CANCEL
	{% endif %}
	TURN_OFF_HEATERS
	SDCARD_RESET_FILE
	CANCEL_PRINT_BASE
	RESPOND TYPE=command MSG="Print cancel"
	RUN_SHELL_COMMAND CMD=SPEAK PARAMS="print_cancelled"

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude = 1.0
gcode = 
	
	
	{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
	{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
	{% set z_park_delta = 2.0 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - z_park_delta) %}
	{% set z_safe = z_park_delta %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	M83
	G1 E-{extrude} F2100
	{% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	{% if "xyz" in printer.toolhead.homed_axes %}
	G91
	G1 Z{z_safe} F900
	G90
	G1 X{x_park} Y{y_park} F6000
	{% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro DISABLE_STEPPERS]
description = Disable the steppers
gcode = 
	M18
	RESPOND TYPE=command MSG="Steppers disabled"

[gcode_macro LOAD_FILAMENT]
gcode = 
	M83
	G1 E30 F300
	G1 E15 F150
	M82
	RESPOND TYPE=command MSG="Load filament"

[gcode_macro UNLOAD_FILAMENT]
gcode = 
	M83
	G1 E10 F300
	G1 E-40 F1800
	M82
	RESPOND TYPE=command MSG="Unload filament"

[gcode_macro _TALKETEMP]
gcode = 
	{% set TEMPE = params.TEMPE|int %}
	RESPOND TYPE=command MSG="Extruder temperature: {TEMPE}"
	RUN_SHELL_COMMAND CMD=SPEAK PARAMS="extruder_temperature_{TEMPE}"

[gcode_macro _TALKBTEMP]
gcode = 
	{% set TEMPB = params.TEMPB|int %}
	RESPOND TYPE=command MSG="Bed temperature: {TEMPB}"
	RUN_SHELL_COMMAND CMD=SPEAK PARAMS="bed_temperature_{TEMPB}"

[gcode_macro _TALKFILSET]
gcode = 
	{% set FILSET = params.FILSET|string %}
	RESPOND TYPE=command MSG="Slicer profile: {FILSET}"
	RUN_SHELL_COMMAND CMD=SPEAK PARAMS="slicer_filament_settings_{FILSET}"

[gcode_macro _TALKLHEIGHT]
gcode = 
	{% set LHEIGHT = params.LHEIGHT|string %}
	RESPOND TYPE=command MSG="Layer height: {LHEIGHT}"
	RUN_SHELL_COMMAND CMD=SPEAK PARAMS="layer_height_{LHEIGHT}"

[gcode_shell_command SPEAK]
command = espeak
timeout = 30
verbose = false

[delayed_gcode connected]
initial_duration = 1
gcode = 
	RUN_SHELL_COMMAND CMD=SPEAK PARAMS="Printer_ready"

[temperature_sensor raspberry_pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[temperature_sensor SKR_temp]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[temperature_sensor toolhead_MCU]
sensor_type = temperature_mcu
sensor_mcu = can0
min_temp = 0
max_temp = 100

[temperature_fan Stepper_Left]
pin = PC6
max_power = 1
shutdown_speed = 0
kick_start_time = 1
off_below = 0.3
sensor_type = Generic 3950
min_temp = 0
max_temp = 100
sensor_pin = PA2
pullup_resistor = 4700
control = pid
pid_kp = 28.182
pid_ki = 1.978
pid_kd = 100.397
pid_deriv_time = 120
target_temp = 40
max_speed = 1.0
min_speed = 0
gcode_id = STEPPER_LEFT

[temperature_fan Stepper_Righ]
pin = PC7
max_power = 1
shutdown_speed = 0
kick_start_time = 1
off_below = 0.3
sensor_type = Generic 3950
min_temp = 0
max_temp = 100
sensor_pin = PA3
pullup_resistor = 4700
control = pid
pid_kp = 28.182
pid_ki = 1.978
pid_kd = 100.397
pid_deriv_time = 120
target_temp = 40
max_speed = 1.0
min_speed = 0
gcode_id = STEPPER_RIGHT

[temperature_fan electronics_bay]
pin = pi:gpio24
max_power = 1
shutdown_speed = 0
kick_start_time = 1
off_below = 0.2
sensor_type = Generic 3950
min_temp = 0
max_temp = 100
sensor_pin = PA0
pullup_resistor = 4700
control = pid
pid_kp = 28.182
pid_ki = 1.978
pid_kd = 100.397
pid_deriv_time = 120
target_temp = 35
max_speed = 1.0
min_speed = 0
gcode_id = ELECTRONICSBAY

[controller_fan Skr_cooling_fan]
pin = PB15
max_power = 1
shutdown_speed = 0
kick_start_time = 1
off_below = 0.2
idle_timeout = 60
idle_speed = 1
stepper = stepper_x, stepper_y, stepper_z

[fan_generic boostFans]
pin = pi:gpio17
max_power = 1
shutdown_speed = 0
kick_start_time = 0.1
off_below = 0.2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method("set_device_power",
	device="mainpower",
	state="off")}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[output_pin BEEPER_pin]
pin = pi:gpio25
pwm = True
value = 0
shutdown_value = 0
cycle_time = 0.001

[gcode_macro M300]
gcode = 
	
	{% set S = params.S|default(1000)|int %}
	
	{% set P = params.P|default(100)|int %}
	SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
	G4 P{P}
	SET_PIN PIN=BEEPER_pin VALUE=0

[endstop_phase]

[pause_resume]

[display_status]

[force_move]
enable_force_move = true

[respond]
default_type = echo

[mcu pi]
serial = /tmp/klipper_host_mcu

[mcu]
serial = /dev/serial/by-id/usb-Klipper_stm32g0b1xx_320045000750414235363020-if00

[mcu can0]
canbus_uuid = cb71706bb3a2

[virtual_sdcard]
path = /home/pi/printer_data/gcodes
on_error_gcode = 
	SET_LED LED=hat GREEN=0 BLUE=0 RED=1
	SET_LED LED=underglow GREEN=0 BLUE=0 RED=1
	M300 P1000 S11
	RUN_SHELL_COMMAND CMD=SPEAK PARAMS="Error_detected"

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_accel_to_decel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[safe_z_home]
home_xy_position = 120,120
speed = 20

[input_shaper]
shaper_freq_x = 73
shaper_type_x = mzv
shaper_freq_y = 87
shaper_type_y = zv

[stepper_x]
step_pin = PB13
dir_pin = PB12
enable_pin = !PB14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = can0:PB6
position_endstop = 120
position_max = 120
position_min = 0
homing_speed = 20
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC11
tx_pin = PC10
uart_address = 0
interpolate = False
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PB10
dir_pin = PB2
enable_pin = !PB11
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = ^PC1
position_endstop = 120
position_max = 120
position_min = 0
homing_speed = 20
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PC11
tx_pin = PC10
uart_address = 2
interpolate = False
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PB0
dir_pin = !PC5
enable_pin = !PB1
rotation_distance = 8
microsteps = 32
endstop_pin = ^PC2
position_endstop = 0
position_max = 115
position_min = 0
homing_speed = 10
second_homing_speed = 3.0
homing_retract_dist = 3.0

[tmc2209 stepper_z]
uart_pin = PC11
tx_pin = PC10
uart_address = 1
interpolate = False
run_current = 0.4
sense_resistor = 0.110
stealthchop_threshold = 0

[extruder]
step_pin = can0:PD0
dir_pin = !can0:PD1
enable_pin = !can0:PD2
rotation_distance = 22.46572692
gear_ratio = 50:10
microsteps = 32
full_steps_per_rotation = 200
max_extrude_only_distance = 1400.0
max_extrude_only_velocity = 75.0
max_extrude_only_accel = 1500
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = can0:PB13
sensor_type = MAX31865
sensor_pin = can0:PA4
spi_bus = spi1
rtd_nominal_r = 100
rtd_reference_r = 430
rtd_num_of_wires = 2
min_extrude_temp = 180
max_temp = 450
min_temp = 0
control = pid
pid_kp = 24.513
pid_ki = 1.720
pid_kd = 87.327

[tmc2209 extruder]
uart_pin = can0:PA15
stealthchop_threshold = 0
run_current = .7

[heater_bed]
heater_pin = PC9
sensor_type = Generic 3950
sensor_pin = PC4
smooth_time = 3.0
min_temp = 0
max_temp = 120
pwm_cycle_time = 0.0166
control = pid
pid_kp = 53.726
pid_ki = 1.499
pid_kd = 481.519

[heater_fan hotend_fan]
pin = can0:PA0
max_power = 1.0
kick_start_time = 0.5
heater = extruder
heater_temp = 50.0

[fan]
pin = can0:PA1
kick_start_time = 0.25
cycle_time = 0.15
off_below = 0.10

[idle_timeout]
timeout = 1800

[bed_screws]
screw1 = 66,5
screw1_name = front screw
screw2 = 12,115
screw2_name = back left
screw3 = 115,115
screw3_name = back right
=======================
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/klipper_config/printer.cfg', '-l', '/home/pi/klipper_logs/klippy.log', '-a', '/tmp/klippy_uds']
Git version: 'v0.10.0-623-g5b1a6676'
CPU: 4 core ARMv7 Processor rev 3 (v7l)
Python: '3.7.3 (default, Jan 22 2021, 20:04:44) \n[GCC 8.3.0]'
webhooks client 3039682032: {'program': 'Moonraker', 'version': 'v0.7.1-758-g5a3b1b6'}
=============== Log rollover at Fri Nov 18 14:27:09 2022 ===============
Loaded MCU 'mcu' 91 commands (v0.10.0-291-g4ce2d379 / gcc: (15:9-2019-q4-0ubuntu1) 9.2.1 20191025 (release) [ARM/arm-9-branch revision 277599] binutils: (2.34-4ubuntu1+13ubuntu1) 2.34)
MCU 'mcu' config: ADC_MAX=4095 BUS_PINS_i2c1=PB6,PB7 BUS_PINS_i2c1a=PF1,PF0 BUS_PINS_spi1=PA6,PA7,PA5 BUS_PINS_spi1a=PB4,PB5,PB3 BUS_PINS_spi2=PB14,PB15,PB13 BUS_PINS_spi2a=PC2,PC3,PB10 BUS_PINS_spi3=PB4,PB5,PB3 CLOCK_FREQ=64000000 MCU=stm32g0b1xx RESERVE_PINS_USB=PA11,PA12 RESERVE_PINS_crystal=PF0,PF1 STATS_SUMSQ_BASE=256 STEPPER_BOTH_EDGE=1
mcu 'pi': Starting connect
Loaded MCU 'pi' 111 commands (v0.10.0-613-gebc3b0de / gcc: (Raspbian 8.3.0-6+rpi1) 8.3.0 binutils: (GNU Binutils for Raspbian) 2.31.1)
MCU 'pi' config: ADC_MAX=4095 CLOCK_FREQ=50000000 MCU=linux PCA9685_MAX=4096 PWM_MAX=32768 STATS_SUMSQ_BASE=256
mcu 'can0': Starting CAN connect
Created a socket
mcu 'can0': Timeout on connect
Created a socket
mcu 'can0': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
  File "/home/pi/klipper/klippy/serialhdl.py", line 259, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 317, in get_response
    cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 251, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'can0': Serial connection closed
mcu 'can0': Timeout on connect
Created a socket
mcu 'can0': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
  File "/home/pi/klipper/klippy/serialhdl.py", line 259, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 317, in get_response
    cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 251, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'can0': Serial connection closed
mcu 'can0': Timeout on connect
Created a socket
mcu 'can0': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
  File "/home/pi/klipper/klippy/serialhdl.py", line 259, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 317, in get_response
    cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 251, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'can0': Serial connection closed
mcu 'can0': Timeout on connect
Created a socket
mcu 'can0': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
  File "/home/pi/klipper/klippy/serialhdl.py", line 259, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 317, in get_response
    cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 251, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'can0': Serial connection closed
mcu 'can0': Timeout on connect
Created a socket
mcu 'can0': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
  File "/home/pi/klipper/klippy/serialhdl.py", line 259, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 317, in get_response
    cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 251, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'can0': Serial connection closed
mcu 'can0': Timeout on connect
Created a socket
mcu 'can0': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
  File "/home/pi/klipper/klippy/serialhdl.py", line 259, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 317, in get_response
    cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 251, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'can0': Serial connection closed
b'Got EOF when reading from device'
mcu 'can0': Timeout on connect
Created a socket
mcu 'can0': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
  File "/home/pi/klipper/klippy/serialhdl.py", line 259, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 317, in get_response
    cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 251, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'can0': Serial connection closed
mcu 'can0': Timeout on connect
Created a socket
mcu 'can0': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
  File "/home/pi/klipper/klippy/serialhdl.py", line 259, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 317, in get_response
    cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 251, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'can0': Serial connection closed
mcu 'can0': Timeout on connect
Created a socket
mcu 'can0': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
  File "/home/pi/klipper/klippy/serialhdl.py", line 259, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 317, in get_response
    cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 251, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'can0': Serial connection closed
mcu 'can0': Timeout on connect
Created a socket
mcu 'can0': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
  File "/home/pi/klipper/klippy/serialhdl.py", line 259, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 317, in get_response
    cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 251, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'can0': Serial connection closed
mcu 'can0': Timeout on connect
Created a socket
mcu 'can0': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
  File "/home/pi/klipper/klippy/serialhdl.py", line 259, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 317, in get_response
    cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 251, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'can0': Serial connection closed
mcu 'can0': Timeout on connect
Created a socket
mcu 'can0': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
  File "/home/pi/klipper/klippy/serialhdl.py", line 259, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 317, in get_response
    cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 251, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'can0': Serial connection closed
mcu 'can0': Timeout on connect
Created a socket
mcu 'can0': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
  File "/home/pi/klipper/klippy/serialhdl.py", line 259, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 317, in get_response
    cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 251, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'can0': Serial connection closed
mcu 'can0': Timeout on connect
Created a socket
mcu 'can0': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
  File "/home/pi/klipper/klippy/serialhdl.py", line 259, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 317, in get_response
    cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 251, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'can0': Serial connection closed
mcu 'can0': Timeout on connect
Created a socket
mcu 'can0': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
  File "/home/pi/klipper/klippy/serialhdl.py", line 259, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 317, in get_response
    cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 251, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'can0': Serial connection closed
mcu 'can0': Timeout on connect
Created a socket
mcu 'can0': Unable to open CAN port: Failed to transmit: [Errno 105] No buffer space available
mcu 'can0': Wait for identify_response
Traceback (most recent call last):
  File "/home/pi/klipper/klippy/serialhdl.py", line 68, in _get_identify_data
    params = self.send_with_response(msg, 'identify_response')
  File "/home/pi/klipper/klippy/serialhdl.py", line 259, in send_with_response
    return src.get_response([cmd], self.default_cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 317, in get_response
    cmd_queue)
  File "/home/pi/klipper/klippy/serialhdl.py", line 251, in raw_send_wait_ack
    self._error("Serial connection closed")
  File "/home/pi/klipper/klippy/serialhdl.py", line 61, in _error
    raise error(self.warn_prefix + (msg % params))
serialhdl.error: mcu 'can0': Serial connection closed
Created a socket
mcu 'can0': Unable to open CAN port: Failed to transmit: [Errno 105] No buffer space available
webhooks client 3039682032: Disconnected
MCU 'pi' shutdown: Force shutdown command
clocksync state: mcu_freq=50000000 last_clock=5847635266 clock_est=(98.853 4492672566 50000783.646) min_half_rtt=0.000052 min_rtt_time=39.792 time_avg=98.853(588.281) clock_avg=4492672566.073(29414486646.871) pred_variance=133219992.890 clock_adj=(-26.412 49993785.750)
Dumping serial stats: bytes_write=1290 bytes_read=6042 bytes_retransmit=0 bytes_invalid=0 send_seq=192 receive_seq=192 retransmit_seq=0 srtt=0.000 rttvar=0.000 rto=0.025 ready_bytes=0 stalled_bytes=0
Dumping send queue 100 messages
Sent 0 39.406381 39.406381 9: seq: 1c, identify offset=3040 count=40
Sent 1 39.407941 39.407941 9: seq: 1d, identify offset=3080 count=40
Sent 2 39.408911 39.408911 9: seq: 1e, identify offset=3081 count=40
Sent 3 39.435707 39.435707 6: seq: 1f, get_uptime
Sent 4 39.486748 39.486748 6: seq: 10, get_clock
Sent 5 39.537628 39.537628 6: seq: 11, get_clock
Sent 6 39.588717 39.588717 6: seq: 12, get_clock
Sent 7 39.639581 39.639581 6: seq: 13, get_clock
Sent 8 39.690990 39.690990 6: seq: 14, get_clock
Sent 9 39.741758 39.741758 6: seq: 15, get_clock
Sent 10 39.792409 39.792409 6: seq: 16, get_clock
Sent 11 39.843318 39.843318 6: seq: 17, get_clock
Sent 12 40.292681 40.292681 6: seq: 18, get_clock
Sent 13 41.276838 41.276838 6: seq: 19, get_clock
Sent 14 42.261816 42.261816 6: seq: 1a, get_clock
Sent 15 43.246381 43.246381 6: seq: 1b, get_clock
Sent 16 44.230964 44.230964 6: seq: 1c, get_clock
Sent 17 45.215244 45.215244 6: seq: 1d, get_clock
Sent 18 46.199734 46.199734 6: seq: 1e, get_clock
Sent 19 47.184100 47.184100 6: seq: 1f, get_clock
Sent 20 48.168377 48.168377 6: seq: 10, get_clock
Sent 21 49.153279 49.153279 6: seq: 11, get_clock
Sent 22 50.137610 50.137610 6: seq: 12, get_clock
Sent 23 51.122529 51.122529 6: seq: 13, get_clock
Sent 24 52.106652 52.106652 6: seq: 14, get_clock
Sent 25 53.091392 53.091392 6: seq: 15, get_clock
Sent 26 54.076486 54.076486 6: seq: 16, get_clock
Sent 27 55.061413 55.061413 6: seq: 17, get_clock
Sent 28 56.046428 56.046428 6: seq: 18, get_clock
Sent 29 57.030600 57.030600 6: seq: 19, get_clock
Sent 30 58.014755 58.014755 6: seq: 1a, get_clock
Sent 31 58.999361 58.999361 6: seq: 1b, get_clock
Sent 32 59.983641 59.983641 6: seq: 1c, get_clock
Sent 33 60.967812 60.967812 6: seq: 1d, get_clock
Sent 34 61.952246 61.952246 6: seq: 1e, get_clock
Sent 35 62.937216 62.937216 6: seq: 1f, get_clock
Sent 36 63.922206 63.922206 6: seq: 10, get_clock
Sent 37 64.907227 64.907227 6: seq: 11, get_clock
Sent 38 65.892057 65.892057 6: seq: 12, get_clock
Sent 39 66.876230 66.876230 6: seq: 13, get_clock
Sent 40 67.860851 67.860851 6: seq: 14, get_clock
Sent 41 68.845263 68.845263 6: seq: 15, get_clock
Sent 42 69.829950 69.829950 6: seq: 16, get_clock
Sent 43 70.814022 70.814022 6: seq: 17, get_clock
Sent 44 71.798620 71.798620 6: seq: 18, get_clock
Sent 45 72.783036 72.783036 6: seq: 19, get_clock
Sent 46 73.767430 73.767430 6: seq: 1a, get_clock
Sent 47 74.752534 74.752534 6: seq: 1b, get_clock
Sent 48 75.737190 75.737190 6: seq: 1c, get_clock
Sent 49 76.721755 76.721755 6: seq: 1d, get_clock
Sent 50 77.706364 77.706364 6: seq: 1e, get_clock
Sent 51 78.691362 78.691362 6: seq: 1f, get_clock
Sent 52 79.675524 79.675524 6: seq: 10, get_clock
Sent 53 80.659911 80.659911 6: seq: 11, get_clock
Sent 54 81.644600 81.644600 6: seq: 12, get_clock
Sent 55 82.629369 82.629369 6: seq: 13, get_clock
Sent 56 83.614179 83.614179 6: seq: 14, get_clock
Sent 57 84.598639 84.598639 6: seq: 15, get_clock
Sent 58 85.582804 85.582804 6: seq: 16, get_clock
Sent 59 86.567631 86.567631 6: seq: 17, get_clock
Sent 60 87.552027 87.552027 6: seq: 18, get_clock
Sent 61 88.536658 88.536658 6: seq: 19, get_clock
Sent 62 89.520745 89.520745 6: seq: 1a, get_clock
Sent 63 90.504759 90.504759 6: seq: 1b, get_clock
Sent 64 91.488838 91.488838 6: seq: 1c, get_clock
Sent 65 92.473338 92.473338 6: seq: 1d, get_clock
Sent 66 93.457643 93.457643 6: seq: 1e, get_clock
Sent 67 94.442448 94.442448 6: seq: 1f, get_clock
Sent 68 95.426701 95.426701 6: seq: 10, get_clock
Sent 69 96.411012 96.411012 6: seq: 11, get_clock
Sent 70 97.395585 97.395585 6: seq: 12, get_clock
Sent 71 98.380275 98.380275 6: seq: 13, get_clock
Sent 72 99.365270 99.365270 6: seq: 14, get_clock
Sent 73 100.351354 100.351354 6: seq: 15, get_clock
Sent 74 101.336264 101.336264 6: seq: 16, get_clock
Sent 75 102.321234 102.321234 6: seq: 17, get_clock
Sent 76 103.305615 103.305615 6: seq: 18, get_clock
Sent 77 104.289801 104.289801 6: seq: 19, get_clock
Sent 78 105.274211 105.274211 6: seq: 1a, get_clock
Sent 79 106.258858 106.258858 6: seq: 1b, get_clock
Sent 80 107.243074 107.243074 6: seq: 1c, get_clock
Sent 81 108.227756 108.227756 6: seq: 1d, get_clock
Sent 82 109.212738 109.212738 6: seq: 1e, get_clock
Sent 83 110.197334 110.197334 6: seq: 1f, get_clock
Sent 84 111.182141 111.182141 6: seq: 10, get_clock
Sent 85 112.166477 112.166477 6: seq: 11, get_clock
Sent 86 113.150958 113.150958 6: seq: 12, get_clock
Sent 87 114.135065 114.135065 6: seq: 13, get_clock
Sent 88 115.119902 115.119902 6: seq: 14, get_clock
Sent 89 116.105022 116.105022 6: seq: 15, get_clock
Sent 90 117.090001 117.090001 6: seq: 16, get_clock
Sent 91 118.074930 118.074930 6: seq: 17, get_clock
Sent 92 119.059270 119.059270 6: seq: 18, get_clock
Sent 93 120.043357 120.043357 6: seq: 19, get_clock
Sent 94 121.027639 121.027639 6: seq: 1a, get_clock
Sent 95 122.012281 122.012281 6: seq: 1b, get_clock
Sent 96 122.996841 122.996841 6: seq: 1c, get_clock
Sent 97 123.981624 123.981624 6: seq: 1d, get_clock
Sent 98 124.966778 124.966778 6: seq: 1e, get_clock
Sent 99 125.951492 125.951492 6: seq: 1f, get_clock
Dumping receive queue 100 messages
Receive: 0 45.215382 45.215244 11: seq: 1e, clock clock=1810766315
Receive: 1 46.199858 46.199734 11: seq: 1f, clock clock=1859990476
Receive: 2 47.184375 47.184100 11: seq: 10, clock clock=1909212959
Receive: 3 48.168635 48.168377 11: seq: 11, clock clock=1958426163
Receive: 4 49.153538 49.153279 11: seq: 12, clock clock=2007671262
Receive: 5 49.200251 49.153279 13: seq: 12, stats count=56 sum=23911 sumsq=151562
Receive: 6 50.137879 50.137610 11: seq: 13, clock clock=2056888386
Receive: 7 51.122750 51.122529 11: seq: 14, clock clock=2106133745
Receive: 8 52.106800 52.106652 11: seq: 15, clock clock=2155337229
Receive: 9 53.091507 53.091392 11: seq: 16, clock clock=2204573140
Receive: 10 54.076764 54.076486 11: seq: 17, clock clock=2253832598
Receive: 11 54.300319 54.076486 13: seq: 17, stats count=56 sum=22164 sumsq=128120
Receive: 12 55.061629 55.061413 11: seq: 18, clock clock=2303077261
Receive: 13 56.046703 56.046428 11: seq: 19, clock clock=2352329693
Receive: 14 57.030866 57.030600 11: seq: 1a, clock clock=2401537810
Receive: 15 58.014987 58.014755 11: seq: 1b, clock clock=2450744654
Receive: 16 58.999497 58.999361 11: seq: 1c, clock clock=2499972673
Receive: 17 59.400121 58.999361 13: seq: 1c, stats count=56 sum=24261 sumsq=152834
Receive: 18 59.983761 59.983641 11: seq: 1d, clock clock=2549185804
Receive: 19 60.968078 60.967812 11: seq: 1e, clock clock=2598398370
Receive: 20 61.952525 61.952246 11: seq: 1f, clock clock=2647620736
Receive: 21 62.937481 62.937216 11: seq: 10, clock clock=2696868669
Receive: 22 63.922449 63.922206 11: seq: 11, clock clock=2746117092
Receive: 23 64.400190 63.922206 13: seq: 11, stats count=55 sum=24544 sumsq=166928
Receive: 24 64.907483 64.907227 11: seq: 12, clock clock=2795368663
Receive: 25 65.892189 65.892057 11: seq: 13, clock clock=2844607271
Receive: 26 66.876351 66.876230 11: seq: 14, clock clock=2893815384
Receive: 27 67.861112 67.860851 11: seq: 15, clock clock=2943049990
Receive: 28 68.845486 68.845263 11: seq: 16, clock clock=2992269550
Receive: 29 69.400192 68.845263 13: seq: 16, stats count=55 sum=21797 sumsq=127754
Receive: 30 69.830217 69.829950 11: seq: 17, clock clock=3041505212
Receive: 31 70.814279 70.814022 11: seq: 18, clock clock=3090708405
Receive: 32 71.798956 71.798620 11: seq: 19, clock clock=3139941836
Receive: 33 72.783185 72.783036 11: seq: 1a, clock clock=3189162000
Receive: 34 73.767565 73.767430 11: seq: 1b, clock clock=3238384993
Receive: 35 74.400017 73.767430 13: seq: 1b, stats count=55 sum=22554 sumsq=140550
Receive: 36 74.752790 74.752534 11: seq: 1c, clock clock=3287644922
Receive: 37 75.737450 75.737190 11: seq: 1d, clock clock=3336880615
Receive: 38 76.721996 76.721755 11: seq: 1e, clock clock=3386111252
Receive: 39 77.706639 77.706364 11: seq: 1f, clock clock=3435346316
Receive: 40 78.691683 78.691362 11: seq: 10, clock clock=3484598159
Receive: 41 79.399733 78.691362 13: seq: 10, stats count=55 sum=27137 sumsq=200912
Receive: 42 79.675739 79.675524 11: seq: 11, clock clock=3533805975
Receive: 43 80.660049 80.659911 11: seq: 12, clock clock=3583025984
Receive: 44 81.644858 81.644600 11: seq: 13, clock clock=3632265417
Receive: 45 82.629682 82.629369 11: seq: 14, clock clock=3681507703
Receive: 46 83.614430 83.614179 11: seq: 15, clock clock=3730746809
Receive: 47 84.499630 83.614179 13: seq: 15, stats count=56 sum=23651 sumsq=143943
Receive: 48 84.598883 84.598639 11: seq: 16, clock clock=3779971073
Receive: 49 85.583031 85.582804 11: seq: 17, clock clock=3829180455
Receive: 50 86.567765 86.567631 11: seq: 18, clock clock=3878420821
Receive: 51 87.552213 87.552027 11: seq: 19, clock clock=3927643065
Receive: 52 88.536918 88.536658 11: seq: 1a, clock clock=3976877794
Receive: 53 89.521035 89.520745 11: seq: 1b, clock clock=4026083655
Receive: 54 89.521056 89.520745 13: seq: 1b, stats count=56 sum=25585 sumsq=199675
Receive: 55 90.504982 90.504759 11: seq: 1c, clock clock=4075283886
Receive: 56 91.489103 91.488838 11: seq: 1d, clock clock=4124490162
Receive: 57 92.473561 92.473338 11: seq: 1e, clock clock=4173714748
Receive: 58 93.457865 93.457643 11: seq: 1f, clock clock=4222930840
Receive: 59 94.442609 94.442448 10: seq: 10, clock clock=4272170290
Receive: 60 94.599387 94.442448 13: seq: 10, stats count=56 sum=24774 sumsq=142526
Receive: 61 95.426917 95.426701 10: seq: 11, clock clock=26417730
Receive: 62 96.411231 96.411012 10: seq: 12, clock clock=75634092
Receive: 63 97.395825 97.395585 10: seq: 13, clock clock=124864383
Receive: 64 98.380494 98.380275 10: seq: 14, clock clock=174098594
Receive: 65 99.365491 99.365270 11: seq: 15, clock clock=223348998
Receive: 66 99.699356 99.365270 13: seq: 15, stats count=56 sum=25743 sumsq=150385
Receive: 67 100.351632 100.351354 11: seq: 16, clock clock=272655598
Receive: 68 101.336481 101.336264 11: seq: 17, clock clock=321899592
Receive: 69 102.321487 102.321234 11: seq: 18, clock clock=371149561
Receive: 70 103.305880 103.305615 11: seq: 19, clock clock=420369659
Receive: 71 104.290069 104.289801 11: seq: 1a, clock clock=469579486
Receive: 72 104.799298 104.289801 13: seq: 1a, stats count=56 sum=27289 sumsq=187275
Receive: 73 105.274488 105.274211 11: seq: 1b, clock clock=518799431
Receive: 74 106.259169 106.258858 11: seq: 1c, clock clock=568035114
Receive: 75 107.243333 107.243074 11: seq: 1d, clock clock=617243877
Receive: 76 108.228006 108.227756 11: seq: 1e, clock clock=666477891
Receive: 77 109.212989 109.212738 11: seq: 1f, clock clock=715727325
Receive: 78 109.799292 109.212738 13: seq: 1f, stats count=55 sum=28749 sumsq=239834
Receive: 79 110.197613 110.197334 11: seq: 10, clock clock=764959654
Receive: 80 111.182409 111.182141 11: seq: 11, clock clock=814199611
Receive: 81 112.166753 112.166477 11: seq: 12, clock clock=863417006
Receive: 82 113.151196 113.150958 11: seq: 13, clock clock=912640031
Receive: 83 114.135314 114.135065 11: seq: 14, clock clock=961846194
Receive: 84 114.899198 114.135065 13: seq: 14, stats count=56 sum=25729 sumsq=182825
Receive: 85 115.120161 115.119902 11: seq: 15, clock clock=1011088232
Receive: 86 116.105291 116.105022 11: seq: 16, clock clock=1060344971
Receive: 87 117.090291 117.090001 11: seq: 17, clock clock=1109594227
Receive: 88 118.075206 118.074930 11: seq: 18, clock clock=1158839651
Receive: 89 119.059531 119.059270 11: seq: 19, clock clock=1208056076
Receive: 90 119.999185 119.059270 13: seq: 19, stats count=56 sum=27532 sumsq=199894
Receive: 91 120.043620 120.043357 11: seq: 1a, clock clock=1257261302
Receive: 92 121.027917 121.027639 11: seq: 1b, clock clock=1306476890
Receive: 93 122.012576 122.012281 11: seq: 1c, clock clock=1355709295
Receive: 94 122.997147 122.996841 11: seq: 1d, clock clock=1404938007
Receive: 95 123.981879 123.981624 11: seq: 1e, clock clock=1454174816
Receive: 96 124.967057 124.966778 11: seq: 1f, clock clock=1503432055
Receive: 97 124.999200 124.966778 13: seq: 1f, stats count=56 sum=30056 sumsq=275513
Receive: 98 125.951772 125.951492 11: seq: 10, clock clock=1552667970
Receive: 99 126.719670 125.951492 12: seq: 10, shutdown clock=1591064273 static_string_id=Force shutdown command
Transition to shutdown state: MCU 'pi' shutdown: Force shutdown command
Reactor garbage collection: (114.364571505, 0.0, 0.0)
Starting Klippy...
Args: ['/home/pi/klipper/klippy/klippy.py', '/home/pi/klipper_config/printer.cfg', '-l', '/home/pi/klipper_logs/klippy.log', '-a', '/tmp/klippy_uds']
Git version: 'v0.10.0-623-g5b1a6676'
CPU: 4 core ARMv7 Processor rev 3 (v7l)
Python: '3.7.3 (default, Jan 22 2021, 20:04:44) \n[GCC 8.3.0]'
Start printer at Fri Nov 18 14:29:08 2022 (1668803348.8 34.4)
===== Config file =====
[adxl345]
cs_pin = can0:PB12
spi_software_sclk_pin = can0:PB10
spi_software_mosi_pin = can0:PB11
spi_software_miso_pin = can0:PB2
axes_map = x,y,z

[resonance_tester]
accel_chip = adxl345
probe_points = 
	60,60,20

[neopixel hat]
pin = PA8
chain_count = 18
color_order = GRB

[gcode_macro HAT_ON]
gcode = 
	SET_LED LED=hat GREEN=1 BLUE=1 RED=1

[gcode_macro HAT_OFF]
gcode = 
	SET_LED LED=hat GREEN=0 BLUE=0 RED=0

[neopixel underglow]
pin = PD5
chain_count = 24
color_order = GRB

[gcode_macro UNDERGLOW_ON]
gcode = 
	SET_LED LED=underglow GREEN=1 BLUE=1 RED=1

[gcode_macro UNDERGLOW_OFF]
gcode = 
	SET_LED LED=underglow GREEN=0 BLUE=0 RED=0

[gcode_macro NEOPIXEL_DISPLAY]
gcode = 
	{% set led = params.LED %}
	{% set type = params.TYPE %}
	{% set mode = params.MODE %}
	{% set my_neopixel = printer.configfile.config['neopixel ' ~ led] %}
	
	{% if mode == 'progress' %}
	{% for i in range(my_neopixel.chain_count|int) %}
	SET_LED_TEMPLATE LED={led} INDEX={i+1} TEMPLATE={'led_' ~ type ~ '_' ~ mode} param_led_num={i+1} param_led_total={my_neopixel.chain_count|int}
	{% endfor %}
	{% endif %}
	{% if mode == 'glow' %}
	SET_LED_TEMPLATE LED={led} TEMPLATE={'led_' ~ type ~ '_' ~ mode}
	{% endif %}

[display_template led_extruder_temp_glow]
text = 
	{% if printer.extruder.target > 0.0 %}
	{%  set temp = printer.extruder.target %}
	{% else %}
	{% set temp = printer.configfile.config.extruder.max_temp %}
	{% endif %}
	{% set ratio = printer.extruder.temperature / temp|float %}
	{ratio}, 0.0, {1-ratio}, 0.0

[display_template led_extruder_temp_progress]
param_led_num = 0
param_led_total = 1
text = 
	{% if printer.extruder.target > 0.0 %}
	{%  set temp = printer.extruder.target %}
	{% else %}
	{% set temp = printer.configfile.config.extruder.max_temp %}
	{% endif %}
	{% set ratio = printer.extruder.temperature / temp|float %}
	{% set led_ratio = param_led_num|float / param_led_total %}
	{% if ratio > led_ratio %}
	{led_ratio}, 0.0, 0.0, 0.0
	{% else %}
	0.0, 0.0, 0.0, 0.0
	{% endif %}

[display_template led_bed_temp_glow]
text = 
	{% if printer.heater_bed.target > 0.0 %}
	{%  set temp = printer.heater_bed.target %}
	{% else %}
	{% set temp = printer.configfile.config.heater_bed.max_temp %}
	{% endif %}
	{% set ratio = printer.heater_bed.temperature / temp|float %}
	{ratio}, 0.0, {1-ratio}, 0.0

[display_template led_bed_temp_progress]
param_led_num = 0
param_led_total = 1
text = 
	{% if printer.heater_bed.target > 0.0 %}
	{%  set temp = printer.heater_bed.target %}
	{% else %}
	{% set temp = printer.configfile.config.heater_bed.max_temp %}
	{% endif %}
	{% set ratio = printer.heater_bed.temperature / temp|float %}
	{% set led_ratio = param_led_num|float / param_led_total %}
	{% if ratio > led_ratio %}
	{led_ratio}, 0.0, 0.0, 0.0
	{% else %}
	0.0, 0.0, 0.0, 0.0
	{% endif %}

[display_template led_print_percent_glow]
text = 
	{% set ratio = printer.virtual_sdcard.progress %}
	0.0, {ratio}, 0.0, 0.0

[display_template led_print_percent_progress]
param_led_num = 0
param_led_total = 1
text = 
	{% set ratio = printer.virtual_sdcard.progress %}
	{% set led_ratio   = param_led_num|float / param_led_total %}
	{% if ratio > led_ratio %}
	0.0, {led_ratio}, 0.0, 0.0
	{% else %}
	0.0, 0.0, 0.0, 0.0
	{% endif %}

[display_template led_printer_speed_glow]
text = 
	{% set ratio  = printer.motion_report.live_velocity|float /  printer.configfile.config.printer.max_velocity|float %}
	0.0, {ratio}, 0.0, 0.0

[display_template led_printer_speed_progress]
param_led_num = 0
param_led_total = 1
text = 
	{% set ratio  = printer.motion_report.live_velocity|float /  printer.configfile.config.printer.max_velocity|float %}
	{% set led_ratio    = param_led_num|float / param_led_total %}
	{% if ratio > led_ratio %}
	0.0, {led_ratio}, 0.0, 0.0
	{% else %}
	0.0, 0.0, 0.0, 0.0
	{% endif %}

[gcode_macro _PRINT_START]
gcode = 
	{% set bedtemp = params.BED|int %}
	{% set hotendtemp = params.HOTEND|int %}
	{% set filament_profile = params.FILID|string %}
	G21
	G90
	M83
	G28
	NEOPIXEL_DISPLAY LED=underglow TYPE=extruder_temp MODE=glow
	G1 Z20 F50
	M190 S{bedtemp}
	M109 S{hotendtemp}
	G28 Z
	RESPOND TYPE=command MSG="Print start"
	RUN_SHELL_COMMAND CMD=SPEAK PARAMS="print_starting"
	
	
	{% if filament_profile == 'PLA_LOUD' %}
	SET_FAN_SPEED FAN=boostFans SPEED=100
	RESPOND TYPE=command MSG="{filament_profile} - Boost fans 100%"
	{% elif filid == 'PLA_STANDARD' %}
	SET_FAN_SPEED FAN=boostFans SPEED=0
	SET_PRESSURE_ADVANCE ADVANCE=0.035
	RESPOND TYPE=command MSG="{filament_profile} - Boost fans 0%"
	{% elif filid == 'ABS' %}
	SET_FAN_SPEED FAN=boostFans SPEED=0
	RESPOND TYPE=command MSG="{filament_profile} - Boost fans 100%"
	{% endif %}
	
	NEOPIXEL_DISPLAY LED=underglow TYPE=print_percent MODE=progress

[gcode_macro _PRINT_END]
gcode = 
	M400
	G92 E0
	G1 E-4.0 F3600
	G91
	SET_FAN_SPEED FAN=boostFans SPEED=0
	RESPOND TYPE=command MSG="Print end"
	RUN_SHELL_COMMAND CMD=SPEAK PARAMS="print_done"
	NEOPIXEL_DISPLAY LED=underglow TYPE=print_percent MODE=glow
	
	
	{% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
	{% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
	{% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}
	
	
	{% if printer.toolhead.position.x < (max_x - 20) %}
	{% set x_safe = 20.0 %}
	{% else %}
	{% set x_safe = -20.0 %}
	{% endif %}
	
	{% if printer.toolhead.position.y < (max_y - 20) %}
	{% set y_safe = 20.0 %}
	{% else %}
	{% set y_safe = -20.0 %}
	{% endif %}
	
	{% if printer.toolhead.position.z < (max_z - 20) %}
	{% set z_safe = 20 %}
	{% else %}
	{% set z_safe = max_z - printer.toolhead.position.z %}
	{% endif %}
	
	G0 Z{z_safe} F3600
	G0 X{x_safe} Y{y_safe} F20000
	TURN_OFF_HEATERS
	M107
	G90
	G0 X60 Y{max_y} F3600
	DISABLE_STEPPERS
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[gcode_macro PAUSE]
rename_existing = PAUSE_BASE
gcode = 
	PAUSE_BASE
	_TOOLHEAD_PARK_PAUSE_CANCEL
	RESPOND TYPE=command MSG="Print pause"
	RUN_SHELL_COMMAND CMD=SPEAK PARAMS="print_paused"

[gcode_macro RESUME]
rename_existing = RESUME_BASE
gcode = 
	
	{% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
	
	{% if 'VELOCITY' in params|upper %}
	{% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
	{%else %}
	{% set get_params = "" %}
	{% endif %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	M83
	G1 E{extrude} F2100
	{% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	RESUME_BASE {get_params}
	RESPOND TYPE=command MSG="Print resume"
	RUN_SHELL_COMMAND CMD=SPEAK PARAMS="print_resuming"

[gcode_macro CANCEL_PRINT]
description = Cancel the actual running print
rename_existing = CANCEL_PRINT_BASE
variable_park = True
gcode = 
	SET_FAN_SPEED FAN=boostFans SPEED=0
	
	{% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
	_TOOLHEAD_PARK_PAUSE_CANCEL
	{% endif %}
	TURN_OFF_HEATERS
	SDCARD_RESET_FILE
	CANCEL_PRINT_BASE
	RESPOND TYPE=command MSG="Print cancel"
	RUN_SHELL_COMMAND CMD=SPEAK PARAMS="print_cancelled"

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description = Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude = 1.0
gcode = 
	
	
	{% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
	{% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
	{% set z_park_delta = 2.0 %}
	
	{% set max_z = printer.toolhead.axis_maximum.z|float %}
	{% set act_z = printer.toolhead.position.z|float %}
	{% if act_z < (max_z - z_park_delta) %}
	{% set z_safe = z_park_delta %}
	{% else %}
	{% set z_safe = max_z - act_z %}
	{% endif %}
	
	{% if printer.extruder.can_extrude|lower == 'true' %}
	M83
	G1 E-{extrude} F2100
	{% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
	{% else %}
	{action_respond_info("Extruder not hot enough")}
	{% endif %}
	{% if "xyz" in printer.toolhead.homed_axes %}
	G91
	G1 Z{z_safe} F900
	G90
	G1 X{x_park} Y{y_park} F6000
	{% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
	{% else %}
	{action_respond_info("Printer not homed")}
	{% endif %}

[gcode_macro DISABLE_STEPPERS]
description = Disable the steppers
gcode = 
	M18
	RESPOND TYPE=command MSG="Steppers disabled"

[gcode_macro LOAD_FILAMENT]
gcode = 
	M83
	G1 E30 F300
	G1 E15 F150
	M82
	RESPOND TYPE=command MSG="Load filament"

[gcode_macro UNLOAD_FILAMENT]
gcode = 
	M83
	G1 E10 F300
	G1 E-40 F1800
	M82
	RESPOND TYPE=command MSG="Unload filament"

[gcode_macro _TALKETEMP]
gcode = 
	{% set TEMPE = params.TEMPE|int %}
	RESPOND TYPE=command MSG="Extruder temperature: {TEMPE}"
	RUN_SHELL_COMMAND CMD=SPEAK PARAMS="extruder_temperature_{TEMPE}"

[gcode_macro _TALKBTEMP]
gcode = 
	{% set TEMPB = params.TEMPB|int %}
	RESPOND TYPE=command MSG="Bed temperature: {TEMPB}"
	RUN_SHELL_COMMAND CMD=SPEAK PARAMS="bed_temperature_{TEMPB}"

[gcode_macro _TALKFILSET]
gcode = 
	{% set FILSET = params.FILSET|string %}
	RESPOND TYPE=command MSG="Slicer profile: {FILSET}"
	RUN_SHELL_COMMAND CMD=SPEAK PARAMS="slicer_filament_settings_{FILSET}"

[gcode_macro _TALKLHEIGHT]
gcode = 
	{% set LHEIGHT = params.LHEIGHT|string %}
	RESPOND TYPE=command MSG="Layer height: {LHEIGHT}"
	RUN_SHELL_COMMAND CMD=SPEAK PARAMS="layer_height_{LHEIGHT}"

[gcode_shell_command SPEAK]
command = espeak
timeout = 30
verbose = false

[delayed_gcode connected]
initial_duration = 1
gcode = 
	RUN_SHELL_COMMAND CMD=SPEAK PARAMS="Printer_ready"

[temperature_sensor raspberry_pi]
sensor_type = temperature_host
min_temp = 0
max_temp = 100

[temperature_sensor SKR_temp]
sensor_type = temperature_mcu
min_temp = 0
max_temp = 100

[temperature_sensor toolhead_MCU]
sensor_type = temperature_mcu
sensor_mcu = can0
min_temp = 0
max_temp = 100

[temperature_fan Stepper_Left]
pin = PC6
max_power = 1
shutdown_speed = 0
kick_start_time = 1
off_below = 0.3
sensor_type = Generic 3950
min_temp = 0
max_temp = 100
sensor_pin = PA2
pullup_resistor = 4700
control = pid
pid_kp = 28.182
pid_ki = 1.978
pid_kd = 100.397
pid_deriv_time = 120
target_temp = 40
max_speed = 1.0
min_speed = 0
gcode_id = STEPPER_LEFT

[temperature_fan Stepper_Righ]
pin = PC7
max_power = 1
shutdown_speed = 0
kick_start_time = 1
off_below = 0.3
sensor_type = Generic 3950
min_temp = 0
max_temp = 100
sensor_pin = PA3
pullup_resistor = 4700
control = pid
pid_kp = 28.182
pid_ki = 1.978
pid_kd = 100.397
pid_deriv_time = 120
target_temp = 40
max_speed = 1.0
min_speed = 0
gcode_id = STEPPER_RIGHT

[temperature_fan electronics_bay]
pin = pi:gpio24
max_power = 1
shutdown_speed = 0
kick_start_time = 1
off_below = 0.2
sensor_type = Generic 3950
min_temp = 0
max_temp = 100
sensor_pin = PA0
pullup_resistor = 4700
control = pid
pid_kp = 28.182
pid_ki = 1.978
pid_kd = 100.397
pid_deriv_time = 120
target_temp = 35
max_speed = 1.0
min_speed = 0
gcode_id = ELECTRONICSBAY

[controller_fan Skr_cooling_fan]
pin = PB15
max_power = 1
shutdown_speed = 0
kick_start_time = 1
off_below = 0.2
idle_timeout = 60
idle_speed = 1
stepper = stepper_x, stepper_y, stepper_z

[fan_generic boostFans]
pin = pi:gpio17
max_power = 1
shutdown_speed = 0
kick_start_time = 0.1
off_below = 0.2

[gcode_macro _POWER_OFF_PRINTER]
gcode = 
	{action_call_remote_method("set_device_power",
	device="mainpower",
	state="off")}

[delayed_gcode POWER_OFF_PRINTER_CHECK]
gcode = 
	{% if printer.idle_timeout.state == "Idle" or printer.idle_timeout.state == "Ready" %}
	{% if printer.extruder.temperature < 50.0 and printer.heater_bed.temperature < 50.0 %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	_POWER_OFF_PRINTER
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% endif %}
	{% else %}
	{% if printer.idle_timeout.state == "Printing" %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% else %}
	{% if printer.extruder.target == 0.0 and printer.heater_bed.target == 0.0 %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=2
	{% else %}
	UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=0
	{% endif %}
	{% endif %}
	{% endif %}
	{% endif %}

[output_pin BEEPER_pin]
pin = pi:gpio25
pwm = True
value = 0
shutdown_value = 0
cycle_time = 0.001

[gcode_macro M300]
gcode = 
	
	{% set S = params.S|default(1000)|int %}
	
	{% set P = params.P|default(100)|int %}
	SET_PIN PIN=BEEPER_pin VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
	G4 P{P}
	SET_PIN PIN=BEEPER_pin VALUE=0

[endstop_phase]

[pause_resume]

[display_status]

[force_move]
enable_force_move = true

[respond]
default_type = echo

[mcu pi]
serial = /tmp/klipper_host_mcu

[mcu]
serial = /dev/serial/by-id/usb-Klipper_stm32g0b1xx_320045000750414235363020-if00

[mcu can0]
canbus_uuid = cb71706bb3a2

[virtual_sdcard]
path = /home/pi/printer_data/gcodes
on_error_gcode = 
	SET_LED LED=hat GREEN=0 BLUE=0 RED=1
	SET_LED LED=underglow GREEN=0 BLUE=0 RED=1
	M300 P1000 S11
	RUN_SHELL_COMMAND CMD=SPEAK PARAMS="Error_detected"

[printer]
kinematics = corexy
max_velocity = 300
max_accel = 3000
max_accel_to_decel = 3000
max_z_velocity = 15
max_z_accel = 350
square_corner_velocity = 5.0

[safe_z_home]
home_xy_position = 120,120
speed = 20

[input_shaper]
shaper_freq_x = 73
shaper_type_x = mzv
shaper_freq_y = 87
shaper_type_y = zv

[stepper_x]
step_pin = PB13
dir_pin = PB12
enable_pin = !PB14
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = can0:PB6
position_endstop = 120
position_max = 120
position_min = 0
homing_speed = 20
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_x]
uart_pin = PC11
tx_pin = PC10
uart_address = 0
interpolate = False
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_y]
step_pin = PB10
dir_pin = PB2
enable_pin = !PB11
rotation_distance = 40
microsteps = 32
full_steps_per_rotation = 200
endstop_pin = ^PC1
position_endstop = 120
position_max = 120
position_min = 0
homing_speed = 20
homing_retract_dist = 5
homing_positive_dir = true

[tmc2209 stepper_y]
uart_pin = PC11
tx_pin = PC10
uart_address = 2
interpolate = False
run_current = 0.9
sense_resistor = 0.110
stealthchop_threshold = 0

[stepper_z]
step_pin = PB0
dir_pin = !PC5
enable_pin = !PB1
rotation_distance = 8
microsteps = 32
endstop_pin = ^PC2
position_endstop = 0
position_max = 115
position_min = 0
homing_speed = 10
second_homing_speed = 3.0
homing_retract_dist = 3.0

[tmc2209 stepper_z]
uart_pin = PC11
tx_pin = PC10
uart_address = 1
interpolate = False
run_current = 0.4
sense_resistor = 0.110
stealthchop_threshold = 0

[extruder]
step_pin = can0:PD0
dir_pin = !can0:PD1
enable_pin = !can0:PD2
rotation_distance = 22.46572692
gear_ratio = 50:10
microsteps = 32
full_steps_per_rotation = 200
max_extrude_only_distance = 1400.0
max_extrude_only_velocity = 75.0
max_extrude_only_accel = 1500
nozzle_diameter = 0.400
filament_diameter = 1.750
heater_pin = can0:PB13
sensor_type = MAX31865
sensor_pin = can0:PA4
spi_bus = spi1
rtd_nominal_r = 100
rtd_reference_r = 430
rtd_num_of_wires = 2
min_extrude_temp = 180
max_temp = 450
min_temp = 0
control = pid
pid_kp = 24.513
pid_ki = 1.720
pid_kd = 87.327

[tmc2209 extruder]
uart_pin = can0:PA15
stealthchop_threshold = 0
run_current = .7

[heater_bed]
heater_pin = PC9
sensor_type = Generic 3950
sensor_pin = PC4
smooth_time = 3.0
min_temp = 0
max_temp = 120
pwm_cycle_time = 0.0166
control = pid
pid_kp = 53.726
pid_ki = 1.499
pid_kd = 481.519

[heater_fan hotend_fan]
pin = can0:PA0
max_power = 1.0
kick_start_time = 0.5
heater = extruder
heater_temp = 50.0

[fan]
pin = can0:PA1
kick_start_time = 0.25
cycle_time = 0.15
off_below = 0.10

[idle_timeout]
timeout = 1800

[bed_screws]
screw1 = 66,5
screw1_name = front screw
screw2 = 12,115
screw2_name = back left
screw3 = 115,115
screw3_name = back right
=======================
Extruder max_extrude_ratio=0.266081
mcu 'mcu': Starting serial connect
mcu 'mcu': Unable to open serial port: [Errno 2] could not open port /dev/serial/by-id/usb-Klipper_stm32g0b1xx_320045000750414235363020-if00: [Errno 2] No such file or directory: '/dev/serial/by-id/usb-Klipper_stm32g0b1xx_320045000750414235363020-if00'
webhooks client 3039337776: New connection
webhooks client 3039337776: Client info {'program': 'Moonraker', 'version': 'v0.7.1-758-g5a3b1b6'}
